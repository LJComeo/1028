1.命名空间(namespace)：
·命名空间就是一个新的作用域
·主要是为了解决C语言函数名字的冲突的问题
·同名的命名空间会编译到同一个命名空间中
·访问的话使用的是域名::变量或者函数
※如果两个命名空间里面有两个同名的函数，并且命名空间被using了，这个时候就会产生冲突，编译器不知道调用哪个
2.C++输入输出：
cin >>、cout <<
流操作运算符的重载
3.缺省参数：
※缺省参数必须从右向左开始缺省
※如果你传的话就使用传进来的值，不穿的话就是用默认的
4.函数重载：
※参数列表不同得同名函数会产生函数重载
※参数列表不同可以，但是光返回值不同就不行
5.引用：
※底层的实现是指针
※引用必须初始化
※引用比指针安全
※引用就是别名，一个变量可以有许多别名，但是一个引用只能引用一个变量
6.内联函数(inline)
※内联函数在编译的时候不会创建栈，而是直接展开
※内联函数是对编译器的一种建议，如果过于复杂的话就会变成普通的函数
※类中的函数默认是内联函数
※内联函数与宏相比较，宏在定义函数的时候比较容易出错，所以在定义函数的时候使用内联函数就比较好，内联函数主要对于宏定义函数的优点就是
类型的检查
7.auto关键字：
※可以根据最近的数据的类型来确定自己的类型
※定义变量可以定义多个变量，但是类型取决于第一个变量
8.范围for：
※新的遍历方式，更加的方便
for (auto & i : arr)
{
	i;
}
for (auto i : arr)
{
	i;
}
传引用的可以改变值，不传引用的不会改变
9.nullptr：
为了解决C语言中的null值为0 的情况，提高代码的健壮性，也有了自己的类型
nullptr_t类型